# Home page
GET     /                           controllers.Application.index
GET     /home                       controllers.Application.home

GET     /logout                     controllers.Authentication.logout
POST    /login                      controllers.Authentication.login

GET     /signup                     controllers.Authentication.prepareSignup
GET     /signup/github              controllers.Authentication.createFromGithub
GET     /login/github               controllers.Authentication.githubLogin
POST    /github/callback            controllers.Authentication.callbackGithub
GET     /github/callback            controllers.Authentication.callbackGithub

GET     /access_token               controllers.Authentication.showAccessToken

POST    /newspeaker                 controllers.Authentication.saveNewSpeaker
GET     /newspeaker/validateMail    controllers.Authentication.validateYourEmail(t:String,a:String)
POST    /newspeaker/validImported   controllers.Authentication.validateImportedSpeaker

GET     /cfp/home                   controllers.CallForPaper.homeForSpeaker
GET     /cfp                        controllers.CallForPaper.homeForSpeaker
GET     /cfp/profile                controllers.CallForPaper.editProfile
POST    /cfp/profile                controllers.CallForPaper.saveProfile
GET     /cfp/webuser/edit           controllers.CallForPaper.editCurrentWebuser
POST    /cfp/webuser/save           controllers.CallForPaper.saveCurrentWebuser

# proposal
GET     /cfp/proposal/new           controllers.CallForPaper.newProposal()
POST    /cfp/proposal/preview       controllers.CallForPaper.previewProposal()
POST    /cfp/proposal/save          controllers.CallForPaper.saveProposal()

GET     /cfp/proposal/edit/:proposalId   controllers.CallForPaper.editProposal(proposalId:String)
GET     /cfp/proposal/edit/:proposalId/speakers controllers.CallForPaper.editOtherSpeakers(proposalId:String)
POST    /cfp/proposal/save/:proposalId/speakers controllers.CallForPaper.saveOtherSpeakers(proposalId:String)
GET     /cfp/proposal/delete/:proposalId controllers.CallForPaper.deleteProposal(proposalId:String)
GET     /cfp/proposal/undelete/:proposalId controllers.CallForPaper.undeleteProposal(proposalId:String)
GET     /cfp/proposal/submit/:proposalId controllers.CallForPaper.submitProposal(proposalId:String)
GET     /cfp/comment/:proposalId         controllers.CallForPaper.showCommentForProposal(proposalId:String)
POST    /cfp/comment/:proposalId         controllers.CallForPaper.sendMessageToComite(proposalId:String)

# Password
GET     /forget                     controllers.Authentication.forgetPassword
POST    /forget/validate            controllers.Authentication.doForgetPassword()
GET     /resetpassword              controllers.Authentication.resetPassword(t:String, a:String)

# OAuth2 google
GET     /signup/google              controllers.Authentication.createFromGoogle
GET     /login/google               controllers.Authentication.googleLogin
GET     /googleoauth2callback       controllers.Authentication.callbackGoogle
POST    /googleoauth2callback       controllers.Authentication.callbackGoogle

# for test
GET     /resetEnvForDev             controllers.Application.resetEnvForDev(email:String)

GET     /bug                        controllers.Application.bugReport
POST    /bug/new                    controllers.Application.submitIssue()

# CFP Admin
GET     /cfpadmin                       controllers.CFPAdmin.index(page:Int ?= 0, sort:Option[String] ?=None, ascdesc:Option[String] ?=None)
GET     /cfpadmin/proposal/:proposalId  controllers.CFPAdmin.openForReview(proposalId:String)
POST    /cfpadmin/proposal/:proposalId/msgToSpeaker controllers.CFPAdmin.sendMessageToSpeaker(proposalId:String)
POST    /cfpadmin/proposal/:proposalId/postInternal controllers.CFPAdmin.postInternalMessage(proposalId:String)
GET     /cfpadmin/proposal/:proposalId/vote         controllers.CFPAdmin.voteForProposal(proposalId:String)
GET     /cfpadmin/proposal/:proposalId/score        controllers.CFPAdmin.showVotesForProposal(proposalId:String)
GET     /cfpadmin/speaker/:email                    controllers.CFPAdmin.showSpeaker(email:String)
GET     /cfpadmin/leaderboard                       controllers.CFPAdmin.leaderBoard
GET     /cfpadmin/myvotes                           controllers.CFPAdmin.allMyVotes

GET     /favicon.ico                controllers.Assets.at(path="/public/images", file="favicon.ico")

GET     /admin/webusers                 controllers.Backoffice.allSpeakers
GET     /admin/webusers/switch          controllers.Backoffice.switchCFPAdmin(uuid:String)
GET     /admin/proposals/draft          controllers.Backoffice.allDraftProposals()
GET     /admin/proposals/submitted      controllers.Backoffice.allSubmittedProposals()
GET     /admin/proposals/moveSubmit     controllers.Backoffice.moveProposalToSubmit(proposalId:String)
GET     /admin/proposals/moveTrash      controllers.Backoffice.moveProposalToTrash(proposalId:String)
GET     /admin/proposals/submitted/moveTrash      controllers.Backoffice.moveSubmittedProposalToTrash(proposalId:String)
GET     /admin/proposals/moveDraft      controllers.Backoffice.moveProposalToDraft(proposalId:String)
GET     /admin/draftReminder            controllers.Backoffice.sendReminderToSpeakersForDraft()
POST    /admin/deleteSpeaker/:speakerUUIDToDelete      controllers.Backoffice.deleteSpeaker(speakerUUIDToDelete:String)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
